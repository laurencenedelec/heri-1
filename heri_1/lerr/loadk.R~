load_K <- function() {

tfam<-read.table("~/NFG/raw/NFBC_transpose.tfam")
names(tfam)<-c("SUBJID","x","y","t","z","w")
## pourcentage of allele share between two indiv IBS  square matrix

Kdis1= read.table('~/NFG/result/NFGsimi.mibs', sep='')
Nom=read.table('~/NFG/result/NFGsimi.mibs.id', sep='')
#Kdis<-1-Kdis
identical(Nom$V1,tfam$SUBJID)
print('K1')

##Other K ibd compute from IBS there is one more individu ??
pt=read.table("~/NFG/result/NFGredibsibd.genome" ,header=TRUE, sep='')
kdisibs<- matrix( 0, nrow = nrow(tfam)+1,ncol = nrow(tfam)+1)
kdisibd<- matrix(data = 0, nrow = nrow(tfam)+1,ncol = nrow(tfam)+1)
for (j in 1:nrow(pt))
{kdisibs[pt$IID1[j],pt$IID2[j]]<-pt$PI_HAT[j]
kdisibd[pt$IID1[j],pt$IID2[j]]<-pt$DST[j]
kdisibs[pt$IID2[j],pt$IID1[j]]<-pt$PI_HAT[j]
kdisibd[pt$IID2[j],pt$IID1[j]]<-pt$DST[j]
}
for (j in 1:(nrow(tfam)+1))
{kdisibs[j,j]<-0
kdisibd[j,j]<-1}
kdisibs<-(1-kdisibs)
kdisibd<-kdisibd
kdisibs<-kdisibs[as.vector(tfam$SUBJID),as.vector(tfam$SUBJID)]
kdisibd<-kdisibd[as.vector(tfam$SUBJID),as.vector(tfam$SUBJID)]

write.table(kdisibd,file="~/NFG/raw/kdisibd")
write.table(kdisibs,file="~/NFG/raw/kdisibs")
#kdisibs<-read.table("~/NFG/raw/kdisibs")
#kdisibd<-read.table("~/NFG/raw/kdisibd")

print('K23')

##same as Kdis1
#Kdis2<-read.table("~/NFG/result/plinkdis.mdist")




##GCTA K normalize
ReadGRMBin=function(prefix, AllN=F, size=4){
  sum_i=function(i){
    return(sum(1:i))
  }
  BinFileName=paste(prefix,".grm.bin",sep="")
  NFileName=paste(prefix,".grm.N.bin",sep="")
  IDFileName=paste(prefix,".grm.id",sep="")
  id = read.table(IDFileName)
  n=dim(id)[1]
  BinFile=file(BinFileName, "rb");
  grm=readBin(BinFile, n=n*(n+1)/2, what=numeric(0), size=size)
  NFile=file(NFileName, "rb");
  if(AllN==T){
    N=readBin(NFile, n=n*(n+1)/2, what=numeric(0), size=size)
  }
  else N=readBin(NFile, n=1, what=numeric(0), size=size)
  i=sapply(1:n, sum_i)
  return(list(diag=grm[i], off=grm[-i], id=id, N=N))
identical(nom$V1,tfam$SUBJID)}


 # Data are stored in the data/METHODNAME directory
 K_GCTA <- ReadGRMBin(prefix = paste0("~/NFG/raw/Kcgta"))

  # Create the matrix Ki_GCTA from the data
  # Data come as a lower triangular matrix
  Ki_GCTA<- diag(nrow(K_GCTA$id))
  diag(Ki_GCTA) <- K_GCTA$diag
  Ki_GCTA[lower.tri(Ki_GCTA, diag = F)] <- K_GCTA$off
  Ki_GCTA <- Ki_GCTA + t(Ki_GCTA) - diag(diag(Ki_GCTA))

  # Give the correct col/row names (this information is used later on to filter data)
  colnames(Ki_GCTA) <- paste(K_GCTA$id$V1)
  rownames(Ki_GCTA) <- paste(K_GCTA$id$V1)


#write.table(Ki_GCTA,file="~/NFG/raw/kgcta")

#identical(K_GCTA$id$V1,tfam$SUBJID)
print('Kgcta')

##GCTA avec plink 1.9
nom<- read.table('~/NFG/result/plinkdisex.mibs.id')
Ki_pGC<- diag(length(nom$V1))
#print(length(nom$V1))
Ki_pGC_tri<- data.matrix( read.table('~/NFG/result/plinkdisex.mibs', fill=TRUE, col.names=paste("V", 1:length(nom$V1))))
Ki_pGC[lower.tri(Ki_pGC, diag = T)] <- Ki_pGC_tri[lower.tri(Ki_pGC_tri,diag=T)]
Ki_pGC <- Ki_pGC + t(Ki_pGC) - diag(diag(Ki_pGC))
write.table(Ki_pGC,file="~/NFG/raw/kpgc")
identical(nom$V1,tfam$SUBJID)
##all together

##GCTA with plink -make-rel 
nom<- read.table('~/NFG/result/plinkgcta.rel.id')
K_ppGC<- data.matrix( read.table('~/NFG/result/plinkgcta.rel'))
identical(nom$V1,tfam$SUBJID)
print('last load')

K.divers<-list(K_ibs=kdisibs,K_ibd=kdisibd,K_plink=Kdis1,K_gcta=Ki_pGC,K_last=K_ppGC)
return(K.divers)

}